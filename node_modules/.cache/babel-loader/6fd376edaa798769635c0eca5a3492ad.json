{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodingProjects\\\\vk-mini-app-che\\\\src\\\\panels\\\\Cinema.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\nimport cinema_db from './dbs/cinema.json';\nimport { useEffect, useState } from 'react/cjs/react.production.min';\nimport { number } from 'prop-types'; // fetch(cinema_db).then(cinema_db => console.log(cinema_db))\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cinema(props) {\n  _s();\n\n  // const count = Array(cinema_db)\n  const count = 5;\n  let number = 1;\n  const [panel, setPanel] = useState( /*#__PURE__*/_jsxDEV(ContentCard, {\n    size: \"l\",\n    header: /*#__PURE__*/_jsxDEV(Avatar, {\n      size: 150,\n      src: cinema_db[number].img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this),\n    subtitle: cinema_db[number].from,\n    maxHeight: 200,\n    text: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        weight: \"semibold\",\n        children: cinema_db[number].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"\\u0420\\u0435\\u0436\\u0438\\u0441\\u0441\\u0451\\u0440: \", cinema_db[number].dir]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"#ff0000\",\n        children: [\"\\u041A\\u041F: \", cinema_db[number].kp, \" IMDb: \", cinema_db[number].imdb]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: cinema_db[number].desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this));\n\n  const getRandomNumber = e => {\n    // window.location.reload(false);\n    // e.preventDefault()\n    number = Math.floor(Math.random() * (count + 1));\n    console.log(number);\n  };\n\n  const cardMap = Object.keys(cinema_db[number]).map(() => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ContentCard, {\n        size: \"l\",\n        header: /*#__PURE__*/_jsxDEV(Avatar, {\n          size: 150,\n          src: cinema_db[number].img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this),\n        subtitle: cinema_db[number].from,\n        maxHeight: 200,\n        text: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            weight: \"semibold\",\n            children: cinema_db[number].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"\\u0420\\u0435\\u0436\\u0438\\u0441\\u0441\\u0451\\u0440: \", cinema_db[number].dir]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"#ff0000\",\n            children: [\"\\u041A\\u041F: \", cinema_db[number].kp, \" IMDb: \", cinema_db[number].imdb]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: cinema_db[number].desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this);\n  }); // const getRandomInteger = (e) => {\n  // \te.preventDefault();\n  // \tvar v = Object.keys(count).map((obj) => {\n  // \t\tvar size = 0\n  // \t\tfor (obj in count) {\n  // \t\t\tsize++;\n  // \t\t}\n  // \t\treturn size;\n  // \t})\n  // \tconsole.log(Math.floor(Math.random() * count))\n  // \tconsole.log(v)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      id: props.id,\n      children: [/*#__PURE__*/_jsxDEV(FixedLayout, {\n        filled: true,\n        vertical: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n          left: /*#__PURE__*/_jsxDEV(PanelHeaderBack, {\n            onClick: props.go,\n            \"data-to\": \"home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this),\n          children: \"\\u0447\\u0451 \\u043F\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: getRandomNumber,\n          stretched: true,\n          size: \"l\",\n          children: \"\\u0441\\u043A\\u0430\\u0436\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        children: panel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Cinema, \"ifrCTlIAxpxu9GfOkyS5Rk1Irg4=\");\n\n_c = Cinema;\nCinema.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n};\nexport default Cinema;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cinema\");","map":{"version":3,"sources":["D:/CodingProjects/vk-mini-app-che/src/panels/Cinema.js"],"names":["React","PropTypes","Panel","PanelHeader","PanelHeaderBack","Button","FixedLayout","Text","ContentCard","Avatar","Spacing","cinema_db","useEffect","useState","number","Cinema","props","count","panel","setPanel","img","from","name","dir","kp","imdb","desc","getRandomNumber","e","Math","floor","random","console","log","cardMap","Object","keys","map","id","go","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\r\n\r\nimport cinema_db from './dbs/cinema.json'\r\nimport { useEffect, useState } from 'react/cjs/react.production.min';\r\nimport { number } from 'prop-types';\r\n\r\n// fetch(cinema_db).then(cinema_db => console.log(cinema_db))\r\n\r\nfunction Cinema(props) {\r\n\t// const count = Array(cinema_db)\r\n\tconst count = 5\r\n\tlet number = 1\r\n\tconst [panel, setPanel] = useState(\r\n\t\t<ContentCard\r\n\t\t\t\tsize=\"l\"\r\n\t\t\t\theader={<Avatar size={150} src={cinema_db[number].img} />}\r\n\t\t\t\tsubtitle={cinema_db[number].from}\r\n\t\t\t\tmaxHeight={200}\r\n\t\t\t\ttext={<div>\r\n\t\t\t\t\t<Text weight='semibold'>{cinema_db[number].name}</Text>\r\n\t\t\t\t\t<Text>Режиссёр: {cinema_db[number].dir}</Text>\r\n\t\t\t\t\t<Text color='#ff0000'>КП: {cinema_db[number].kp} IMDb: {cinema_db[number].imdb}</Text>\r\n\t\t\t\t\t<Spacing />\r\n\t\t\t\t\t<Text>{cinema_db[number].desc}</Text></div>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t</ContentCard>\r\n\t)\r\n\r\n\tconst getRandomNumber = (e) => {\r\n\t\t// window.location.reload(false);\r\n\t\t// e.preventDefault()\r\n\t\tnumber = Math.floor(Math.random() * (count + 1))\r\n\t\tconsole.log(number)\r\n\t}\r\n\r\n\tconst cardMap = Object.keys(cinema_db[number]).map(() => {\r\n\t\t<div>\r\n\t\t\t<ContentCard\r\n\t\t\t\tsize=\"l\"\r\n\t\t\t\theader={<Avatar size={150} src={cinema_db[number].img} />}\r\n\t\t\t\tsubtitle={cinema_db[number].from}\r\n\t\t\t\tmaxHeight={200}\r\n\t\t\t\ttext={<div>\r\n\t\t\t\t\t<Text weight='semibold'>{cinema_db[number].name}</Text>\r\n\t\t\t\t\t<Text>Режиссёр: {cinema_db[number].dir}</Text>\r\n\t\t\t\t\t<Text color='#ff0000'>КП: {cinema_db[number].kp} IMDb: {cinema_db[number].imdb}</Text>\r\n\t\t\t\t\t<Spacing />\r\n\t\t\t\t\t<Text>{cinema_db[number].desc}</Text></div>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t</ContentCard>\r\n\t\t</div>\r\n\t}\r\n\t)\r\n\t// const getRandomInteger = (e) => {\r\n\t// \te.preventDefault();\r\n\t// \tvar v = Object.keys(count).map((obj) => {\r\n\t// \t\tvar size = 0\r\n\t// \t\tfor (obj in count) {\r\n\t// \t\t\tsize++;\r\n\t// \t\t}\r\n\t// \t\treturn size;\r\n\t// \t})\r\n\t// \tconsole.log(Math.floor(Math.random() * count))\r\n\t// \tconsole.log(v)\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Panel id={props.id}>\r\n\t\t\t\t<FixedLayout filled vertical='top'>\r\n\t\t\t\t\t<PanelHeader\r\n\t\t\t\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\r\n\t\t\t\t\t>чё посмотреть?\r\n\t\t\t\t\t</PanelHeader>\r\n\t\t\t\t\t<Spacing></Spacing>\r\n\t\t\t\t\t<Button type=\"submit\" onClick={getRandomNumber} stretched size=\"l\">скажи</Button>\r\n\t\t\t\t\t<Spacing></Spacing>\r\n\t\t\t\t\t{/* <ContentCard\r\n\t\t\t\t\tsize=\"l\"\r\n\t\t\t\t\theader={<Avatar size={150} src={cinema_db[number].img}/>}\t\r\n\t\t\t\t\tsubtitle={cinema_db[number].from}\r\n\t\t\t\t\tmaxHeight={200}\r\n\t\t\t\t\ttext={<div>\r\n\t\t\t\t\t\t<Text weight='semibold'>{cinema_db[number].name}</Text>\r\n\t\t\t\t\t\t<Text>Режиссёр: {cinema_db[number].dir}</Text>\r\n\t\t\t\t\t\t<Text color='#ff0000'>КП: {cinema_db[number].kp} IMDb: {cinema_db[number].imdb}</Text>\r\n\t\t\t\t\t\t<Spacing/>\r\n\t\t\t\t\t\t<Text>{cinema_db[number].desc}</Text></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\t\r\n\t\t\t\t</ContentCard> */}\r\n\t\t\t\t</FixedLayout>\r\n\t\t\t\t<Panel>\r\n\t\t\t\t\t{panel}\r\n\t\t\t\t</Panel>\r\n\t\t\t</Panel>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCinema.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Cinema;\r\n"]},"metadata":{},"sourceType":"module"}