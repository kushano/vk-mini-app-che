{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","panels/Cinema.js","panels/Books.js","panels/Draw.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","Persik","props","left","className","persik","alt","Cinema","useState","number","setNumber","cardMap","Object","keys","cinema_db","map","msg","img","subtitle","from","maxHeight","text","weight","name","dir","color","kp","imdb","desc","filled","vertical","type","e","preventDefault","Math","floor","random","Books","books_db","jenre","year","author","litres","quote","Draw","words","setWords","word","toString","newMsg","Date","now","draw_db","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","fetchData","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"67kBAqDeA,EAhDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,eAAC,IAAD,CAAOF,GAAIA,EAAX,UACC,cAAC,IAAD,4EACCE,GACD,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,0GAAf,SACC,cAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,cAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KACxEE,YAAaN,EAAYO,MAAQP,EAAYO,KAAKC,MAAQR,EAAYO,KAAKC,MAAQ,GAFpF,mBAIKR,EAAYS,WAJjB,YAI+BT,EAAYU,eAI5C,cAAC,IAAD,CAAOT,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,qEAAf,SACC,eAAC,IAAD,WAKC,cAAC,IAAD,CAAQS,WAAS,EAACC,KAAK,IAAIV,KAAK,YAAYW,QAASd,EAAI,UAAQ,SAAjE,wFAGA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQY,WAAS,EAACC,KAAK,IAAIV,KAAK,YAAYW,QAASd,EAAI,UAAQ,QAAjE,4EAGA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQY,WAAS,EAACC,KAAK,IAAIV,KAAK,YAAYW,QAASd,EAAI,UAAQ,OAAjE,iGChCW,MAA0B,mCCwB1Be,G,OAhBA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOjB,GAAIiB,EAAMjB,GAAjB,UACC,cAAC,IAAD,CACCkB,KAAM,cAAC,IAAD,CAAiBH,QAASE,EAAMhB,GAAI,UAAQ,SADnD,oBAKA,qBAAKkB,UAAU,SAASZ,IAAKa,EAAQC,IAAI,wB,QC2C5BC,MAnDf,SAAgBL,GAEf,IAEA,EAA4BM,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQIC,EAAUC,OAAOC,KAAKC,GAAWC,KAAI,SAACC,GAAD,OACxC,cAAC,IAAD,CACCjB,KAAK,IACLX,OAAQ,cAAC,IAAD,CAAQW,KAAM,IAAKP,IAAKsB,EAAUL,GAAQQ,MAClDC,SAAUJ,EAAUL,GAAQU,KAC5BC,UAAW,IACXC,KAAM,gCACL,cAAC,IAAD,CAAMC,OAAO,WAAb,SAAyBR,EAAUL,GAAQc,OAC3C,eAAC,IAAD,gEAAiBT,EAAUL,GAAQe,OACnC,eAAC,IAAD,CAAMC,MAAM,UAAZ,2BAA2BX,EAAUL,GAAQiB,GAA7C,UAAwDZ,EAAUL,GAAQkB,QAC1E,cAAC,IAAD,IACA,cAAC,IAAD,UAAOb,EAAUL,GAAQmB,eAM5B,OACC,eAAC,IAAD,CAAO3C,GAAIiB,EAAMjB,GAAjB,UACC,cAAC,IAAD,CAASc,KAAM,MACf,eAAC,IAAD,CAAa8B,QAAM,EAACC,SAAS,MAA7B,UACC,cAAC,IAAD,CACC3B,KAAM,cAAC,IAAD,CAAiBH,QAASE,EAAMhB,GAAI,UAAQ,SADnD,wFAIA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQ6C,KAAK,SAAS/B,QAhCD,SAACgC,GACxBA,EAAEC,iBACFvB,EAAUwB,KAAKC,MAAM,EAAI,GAAAD,KAAKE,YA8BoBtC,WAAS,EAACC,KAAK,IAA/D,4CACA,cAAC,IAAD,OAEAY,EAAQ,O,QCYG0B,MArDf,SAAenC,GAEd,IAEA,EAA4BM,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQIC,EAAUC,OAAOC,KAAKyB,GAAUvB,KAAI,SAACC,GAAD,OACvC,cAAC,IAAD,CACCjB,KAAK,IACLX,OAAQ,cAAC,IAAD,CAAQW,KAAM,IAAKP,IAAK8C,EAAS7B,GAAQQ,MACjDC,SAAUoB,EAAS7B,GAAQU,KAC3BC,UAAW,IACXC,KAAM,gCACL,eAAC,IAAD,CAAMC,OAAO,WAAb,UAAyBgB,EAAS7B,GAAQ8B,MAA1C,IAAkDD,EAAS7B,GAAQc,KAAnE,KAA2Ee,EAAS7B,GAAQ+B,QAC5F,eAAC,IAAD,8CAAcF,EAAS7B,GAAQgC,UAC/B,eAAC,IAAD,CAAMhB,MAAM,UAAZ,mDAA+Ba,EAAS7B,GAAQiC,UACpC,cAAC,IAAD,IACA,eAAC,IAAD,oDAAeJ,EAAS7B,GAAQkC,SAC5C,cAAC,IAAD,IACA,cAAC,IAAD,UAAOL,EAAS7B,GAAQmB,eAM3B,OACC,eAAC,IAAD,CAAO3C,GAAIiB,EAAMjB,GAAjB,UACC,cAAC,IAAD,CAASc,KAAM,MACf,eAAC,IAAD,CAAa8B,QAAM,EAACC,SAAS,MAA7B,UACC,cAAC,IAAD,CACC3B,KAAM,cAAC,IAAD,CAAiBH,QAASE,EAAMhB,GAAI,UAAQ,SADnD,4EAIA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQ6C,KAAK,SAAS/B,QAlCD,SAACgC,GACxBA,EAAEC,iBACFvB,EAAUwB,KAAKC,MAAM,EAAI,EAAAD,KAAKE,YAgCoBtC,WAAS,EAACC,KAAK,IAA/D,4CACA,cAAC,IAAD,OAEAY,EAAQ,O,gBCYGiC,MAvDf,SAAc1C,GAEV,IAEA,EAA0BM,mBAAS,IAAnC,mBAAOqC,EAAP,KAAcC,EAAd,KAEA,EAA4BtC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAcIC,EAAUC,OAAOC,KAAKgC,GAAO9B,KAAI,SAACC,GAAD,OACjC,cAAC,IAAD,CAA2BM,OAAO,WAAlC,SAA8CuB,EAAM7B,GAAK+B,MAA9C/B,EAAIgC,eAGnB,OACI,eAAC,IAAD,CAAO/D,GAAIiB,EAAMjB,GAAjB,UACI,cAAC,IAAD,CAASc,KAAM,MACf,eAAC,IAAD,CAAa8B,QAAM,EAACC,SAAS,MAA7B,UACI,cAAC,IAAD,CACI3B,KAAM,cAAC,IAAD,CAAiBH,QAASE,EAAMhB,GAAI,UAAQ,SADtD,wFAIA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQ6C,KAAK,SAAS/B,QAzBV,SAACgC,GAErBtB,EAAUwB,KAAKC,MAAM,IAAAD,KAAKE,WAE1B,IAAMa,EAAS,CACXhE,GAAIiE,KAAKC,MACTJ,KAAMK,EAAQ3C,GAAQsC,MAE1BD,EAAS,GAAD,mBAAKD,GAAL,CAAYI,MAiBoCnD,WAAS,EAACC,KAAK,IAA/D,kDACA,cAAC,IAAD,OAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACIA,KAAK,IACLX,OAAQ,0PAGRiC,KACCV,UCON0C,EA9CH,WACX,MAA4B7C,mBAAS,gBAArC,mBAAO8C,EAAP,KAAeC,EAAf,KACA,EAAsC/C,mBAAS,QAA/C,mBAAOgD,EAAP,KAAoBC,EAApB,KACA,EAA+BjD,mBAAS,MAAxC,mBAAOrB,EAAP,KAAoBuE,EAApB,KACA,EAA4BlD,mBAAS,cAAC,IAAD,CAAeT,KAAK,WAAzD,mBAAO4D,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CAOf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CAPe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUpC,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,KACtB,yBAATrC,GACHwB,EAAUa,EAAKd,WAHF,mCAYfe,KACE,IAEH,IAAMnF,EAAK,SAAA8C,GACVyB,EAAezB,EAAEsC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,CAAgBlB,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAaK,OAAQA,EAArB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMH,YAAaA,EAAnB,UACC,cAAC,EAAD,CAAMvE,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,IACxB,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,IACxB,cAAC,EAAD,CAAOD,GAAG,QAAQC,GAAIA,IACtB,cAAC,EAAD,CAAMD,GAAG,OAAOC,GAAIA,kBCzC5B6E,IAAOC,KAAK,gBAEZS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.b6b5b73c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, Spacing } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>чёподелать?</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">Приветствуем Вас,</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Выбирайте:</Header>}>\n\t\t\t<Div>\n\t\t\t\t{/* <Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t\t<Spacing/> */}\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"cinema\">\n\t\t\t\t\tчё посмотреть?\n\t\t\t\t</Button>\n\t\t\t\t<Spacing/>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"books\">\n\t\t\t\t\tчё почитать?\n\t\t\t\t</Button>\n\t\t\t\t<Spacing/>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"draw\">\n\t\t\t\t\tчё порисовать?\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\r\n\r\nimport cinema_db from './dbs/cinema.json'\r\n\r\nfunction Cinema(props) {\r\n\r\n\tconst count = 18\r\n\r\n\tconst [number, setNumber] = useState(0)\r\n\r\n\tconst getRandomNumber = (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetNumber(Math.floor(1 + Math.random() * (count + 1)))\r\n\t\t// console.log(number)\r\n\t}\r\n\r\n\tvar cardMap = Object.keys(cinema_db).map((msg) =>\r\n\t\t<ContentCard\r\n\t\t\tsize=\"l\"\r\n\t\t\theader={<Avatar size={150} src={cinema_db[number].img} />}\r\n\t\t\tsubtitle={cinema_db[number].from}\r\n\t\t\tmaxHeight={200}\r\n\t\t\ttext={<div>\r\n\t\t\t\t<Text weight='semibold'>{cinema_db[number].name}</Text>\r\n\t\t\t\t<Text>Режиссёр: {cinema_db[number].dir}</Text>\r\n\t\t\t\t<Text color='#ff0000'>КП: {cinema_db[number].kp} IMDb: {cinema_db[number].imdb}</Text>\r\n\t\t\t\t<Spacing />\r\n\t\t\t\t<Text>{cinema_db[number].desc}</Text></div>\r\n\t\t\t}\r\n\t\t>\r\n\t\t</ContentCard>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Panel id={props.id}>\r\n\t\t\t<Spacing size={120}></Spacing>\r\n\t\t\t<FixedLayout filled vertical='top'>\r\n\t\t\t\t<PanelHeader\r\n\t\t\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\r\n\t\t\t\t>чё посмотреть?\r\n\t\t\t\t</PanelHeader>\r\n\t\t\t\t<Spacing></Spacing>\r\n\t\t\t\t<Button type=\"submit\" onClick={getRandomNumber} stretched size=\"l\">скажи</Button>\r\n\t\t\t\t<Spacing></Spacing>\r\n\t\t\t</FixedLayout>\r\n\t\t\t{cardMap[0]}\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\nCinema.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Cinema;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\r\n\r\nimport books_db from './dbs/books.json'\r\n\r\nfunction Books(props) {\r\n\r\n\tconst count = 5\r\n\r\n\tconst [number, setNumber] = useState(0)\r\n\r\n\tconst getRandomNumber = (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetNumber(Math.floor(1 + Math.random() * (count + 1)))\r\n\t\t// console.log(number)\r\n\t}\r\n\r\n\tvar cardMap = Object.keys(books_db).map((msg) =>\r\n\t\t<ContentCard\r\n\t\t\tsize=\"l\"\r\n\t\t\theader={<Avatar size={150} src={books_db[number].img} />}\r\n\t\t\tsubtitle={books_db[number].from}\r\n\t\t\tmaxHeight={200}\r\n\t\t\ttext={<div>\r\n\t\t\t\t<Text weight='semibold'>{books_db[number].jenre} {books_db[number].name}, {books_db[number].year}</Text>\r\n\t\t\t\t<Text>Автор: {books_db[number].author}</Text>\r\n\t\t\t\t<Text color='#ff0000'>Литрес: {books_db[number].litres}</Text>\r\n                <Spacing />\r\n                <Text>Цитата: {books_db[number].quote}</Text>\r\n\t\t\t\t<Spacing />\r\n\t\t\t\t<Text>{books_db[number].desc}</Text></div>\r\n\t\t\t}\r\n\t\t>\r\n\t\t</ContentCard>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Panel id={props.id}>\r\n\t\t\t<Spacing size={120}></Spacing>\r\n\t\t\t<FixedLayout filled vertical='top'>\r\n\t\t\t\t<PanelHeader\r\n\t\t\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\r\n\t\t\t\t>чё почитать?\r\n\t\t\t\t</PanelHeader>\r\n\t\t\t\t<Spacing></Spacing>\r\n\t\t\t\t<Button type=\"submit\" onClick={getRandomNumber} stretched size=\"l\">скажи</Button>\r\n\t\t\t\t<Spacing></Spacing>\r\n\t\t\t</FixedLayout>\r\n\t\t\t{cardMap[0]}\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\nBooks.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Books;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { View, Input, Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\r\n\r\nimport draw_db from './dbs/draw.json'\r\n\r\nfunction Draw(props) {\r\n\r\n    const count = 146\r\n\r\n    const [words, setWords] = useState('')\r\n\r\n    const [number, setNumber] = useState(0)\r\n\r\n    const getRandomNumber = (e) => {\r\n        // e.preventDefault()\r\n        setNumber(Math.floor(Math.random() * (count + 1)))\r\n\r\n        const newMsg = {\r\n            id: Date.now(),\r\n            word: draw_db[number].word\r\n        }\r\n        setWords([...words, newMsg])\r\n    }\r\n\r\n\r\n    var cardMap = Object.keys(words).map((msg) =>\r\n        <Text key={msg.toString()} weight='semibold'>{words[msg].word}</Text>\r\n    )\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <Spacing size={120}></Spacing>\r\n            <FixedLayout filled vertical='top'>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\r\n                >чё порисовать?\r\n                </PanelHeader>\r\n                <Spacing></Spacing>\r\n                <Button type=\"submit\" onClick={getRandomNumber} stretched size=\"l\">добавь</Button>\r\n                <Spacing></Spacing>\r\n            </FixedLayout>\r\n            <Panel>\r\n                <ContentCard\r\n                    size=\"l\"\r\n                    header={\"попробуй объединить этот список в один рисунок:\"}\r\n                    // subtitle={books_db[number].from}\r\n                    // maxHeight={200}\r\n                    text=\r\n                    {cardMap}\r\n                ></ContentCard>\r\n            </Panel>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nDraw.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Draw;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Cinema from './panels/Cinema';\nimport Books from './panels/Books';\nimport Draw from './panels/Draw';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t\t<Cinema id='cinema' go={go} />\n\t\t\t\t\t\t\t\t<Books id=\"books\" go={go}></Books>\n\t\t\t\t\t\t\t\t<Draw id=\"draw\" go={go}></Draw>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}