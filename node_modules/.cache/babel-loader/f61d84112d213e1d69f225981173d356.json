{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodingProjects\\\\vk-mini-app-che\\\\src\\\\panels\\\\Cities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Input, Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\nimport cities_db from './dbs/cities.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cities(props) {\n  _s();\n\n  const count = 1116;\n  const [words, setWords] = useState('');\n  const [number, setNumber] = useState(0);\n\n  const getRandomNumber = e => {\n    // e.preventDefault()\n    setNumber(Math.floor(Math.random() * (count + 1)));\n    const newMsg = {\n      id: Date.now(),\n      city: cities_db[number].city\n    };\n    setWords([newMsg]);\n  };\n\n  var cardMap = Object.keys(words).map(msg => /*#__PURE__*/_jsxDEV(Text, {\n    weight: \"semibold\",\n    children: words[msg].city\n  }, msg.toString(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    id: props.id,\n    children: [/*#__PURE__*/_jsxDEV(Spacing, {\n      size: 120\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FixedLayout, {\n      filled: true,\n      vertical: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        left: /*#__PURE__*/_jsxDEV(PanelHeaderBack, {\n          onClick: props.go,\n          \"data-to\": \"home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }, this),\n        children: \"\\u043A\\u0443\\u0434\\u0430 \\u0441\\u0433\\u043E\\u043D\\u044F\\u0442\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onStart: getRandomNumber,\n        type: \"submit\",\n        onClick: getRandomNumber,\n        stretched: true,\n        size: \"l\",\n        children: \"\\u0441\\u0433\\u0435\\u043D\\u0435\\u0440\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      children: /*#__PURE__*/_jsxDEV(ContentCard, {\n        size: \"l\",\n        header: \"попробуй объединить этот список в один рисунок:\" // subtitle={books_db[number].from}\n        // maxHeight={200}\n        ,\n        text: cardMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cities, \"4LrE+8gUfvPA+Y94VuyTepSXlsI=\");\n\n_c = Cities;\nCities.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n};\nexport default Cities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cities\");","map":{"version":3,"sources":["D:/CodingProjects/vk-mini-app-che/src/panels/Cities.js"],"names":["React","useState","PropTypes","View","Input","Panel","PanelHeader","PanelHeaderBack","Button","FixedLayout","Text","ContentCard","Avatar","Spacing","cities_db","Cities","props","count","words","setWords","number","setNumber","getRandomNumber","e","Math","floor","random","newMsg","id","Date","now","city","cardMap","Object","keys","map","msg","toString","go","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { View, Input, Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\r\n\r\nimport cities_db from './dbs/cities.json'\r\n\r\nfunction Cities(props) {\r\n\r\n    const count = 1116\r\n\r\n    const [words, setWords] = useState('')\r\n\r\n    const [number, setNumber] = useState(0)\r\n\r\n    const getRandomNumber = (e) => {\r\n        // e.preventDefault()\r\n        setNumber(Math.floor(Math.random() * (count + 1)))\r\n\r\n        const newMsg = {\r\n            id: Date.now(),\r\n            city: cities_db[number].city\r\n        }\r\n        setWords([newMsg])\r\n    }\r\n\r\n\r\n    var cardMap = Object.keys(words).map((msg) =>\r\n        <Text key={msg.toString()} weight='semibold'>{words[msg].city}</Text>\r\n    )\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <Spacing size={120}></Spacing>\r\n            <FixedLayout filled vertical='top'>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\r\n                >куда сгонять?\r\n                </PanelHeader>\r\n                <Spacing></Spacing>\r\n                <Button onStart={getRandomNumber} type=\"submit\" onClick={getRandomNumber} stretched size=\"l\">сгенерить</Button>\r\n                <Spacing></Spacing>\r\n            </FixedLayout>\r\n            <Panel>\r\n                <ContentCard\r\n                    size=\"l\"\r\n                    header={\"попробуй объединить этот список в один рисунок:\"}\r\n                    // subtitle={books_db[number].from}\r\n                    // maxHeight={200}\r\n                    text=\r\n                    {cardMap}\r\n                ></ContentCard>\r\n            </Panel>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nCities.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Cities;\r\n"]},"metadata":{},"sourceType":"module"}