{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodingProjects\\\\vk-mini-app-che\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Cinema from './panels/Cinema';\nimport Books from './panels/Books';\nimport Draw from './panels/Draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [scheme, setScheme] = useState('bright_light');\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState( /*#__PURE__*/_jsxDEV(ScreenSpinner, {\n    size: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 39\n  }, this));\n  useEffect(() => {\n    bridge.subscribe(_ref => {\n      let {\n        detail: {\n          type,\n          data\n        }\n      } = _ref;\n\n      if (type === 'VKWebAppUpdateConfig') {\n        setScheme(data.scheme);\n      }\n    });\n\n    async function fetchData() {\n      const user = await bridge.send('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    scheme: scheme,\n    children: /*#__PURE__*/_jsxDEV(AdaptivityProvider, {\n      children: /*#__PURE__*/_jsxDEV(AppRoot, {\n        children: /*#__PURE__*/_jsxDEV(SplitLayout, {\n          popout: popout,\n          children: /*#__PURE__*/_jsxDEV(SplitCol, {\n            children: /*#__PURE__*/_jsxDEV(View, {\n              activePanel: activePanel,\n              children: [/*#__PURE__*/_jsxDEV(Home, {\n                id: \"home\",\n                fetchedUser: fetchedUser,\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Persik, {\n                id: \"persik\",\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Cinema, {\n                id: \"cinema\",\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Books, {\n                id: \"books\",\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Draw, {\n                id: \"draw\",\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Cities, {\n                id: \"cities\",\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"SPmFxTtv233qKIh2PionYIzHmEo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/CodingProjects/vk-mini-app-che/src/App.js"],"names":["React","useState","useEffect","bridge","View","ScreenSpinner","AdaptivityProvider","AppRoot","ConfigProvider","SplitLayout","SplitCol","Home","Persik","Cinema","Books","Draw","App","scheme","setScheme","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","subscribe","detail","type","data","fetchData","user","send","go","e","currentTarget","dataset","to"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,kBAA9B,EAAkDC,OAAlD,EAA2DC,cAA3D,EAA2EC,WAA3E,EAAwFC,QAAxF,QAAwG,iBAAxG;AACA,OAAO,+BAAP;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,cAAD,CAApC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,MAAD,CAA9C;AACA,QAAM,CAACoB,WAAD,EAAcC,OAAd,IAAyBrB,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,eAAC,QAAC,aAAD;AAAe,IAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,UAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,MAAM,CAACsB,SAAP,CAAiB,QAA+B;AAAA,UAA9B;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR;AAAV,OAA8B;;AAC/C,UAAID,IAAI,KAAK,sBAAb,EAAqC;AACpCT,QAAAA,SAAS,CAACU,IAAI,CAACX,MAAN,CAAT;AACA;AACD,KAJD;;AAMA,mBAAeY,SAAf,GAA2B;AAC1B,YAAMC,IAAI,GAAG,MAAM3B,MAAM,CAAC4B,IAAP,CAAY,qBAAZ,CAAnB;AACAT,MAAAA,OAAO,CAACQ,IAAD,CAAP;AACAN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;;AACDK,IAAAA,SAAS;AACT,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMG,EAAE,GAAGC,CAAC,IAAI;AACfb,IAAAA,cAAc,CAACa,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwBC,EAAzB,CAAd;AACA,GAFD;;AAIA,sBACC,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEnB,MAAxB;AAAA,2BACC,QAAC,kBAAD;AAAA,6BACC,QAAC,OAAD;AAAA,+BACC,QAAC,WAAD;AAAa,UAAA,MAAM,EAAEM,MAArB;AAAA,iCACC,QAAC,QAAD;AAAA,mCACC,QAAC,IAAD;AAAM,cAAA,WAAW,EAAEJ,WAAnB;AAAA,sCACC,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,MAAT;AAAgB,gBAAA,WAAW,EAAEE,WAA7B;AAA0C,gBAAA,EAAE,EAAEW;AAA9C;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC,QAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,QAAX;AAAoB,gBAAA,EAAE,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAFD,eAGC,QAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,QAAX;AAAoB,gBAAA,EAAE,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAHD,eAIC,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAC,OAAV;AAAkB,gBAAA,EAAE,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,sBAJD,eAKC,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,MAAT;AAAgB,gBAAA,EAAE,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,sBALD,eAMC,QAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,QAAX;AAAoB,gBAAA,EAAE,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CA7CD;;GAAMhB,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Cinema from './panels/Cinema';\nimport Books from './panels/Books';\nimport Draw from './panels/Draw';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t\t<Cinema id='cinema' go={go} />\n\t\t\t\t\t\t\t\t<Books id=\"books\" go={go}></Books>\n\t\t\t\t\t\t\t\t<Draw id=\"draw\" go={go}></Draw>\n\t\t\t\t\t\t\t\t<Cities id=\"cities\" go={go}></Cities>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}