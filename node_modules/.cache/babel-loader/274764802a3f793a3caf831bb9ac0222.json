{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodingProjects\\\\vk-mini-app-che\\\\src\\\\panels\\\\Draw.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Input, Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\nimport draw_db from './dbs/draw.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Draw(props) {\n  _s();\n\n  const count = 26;\n  const [words, setWords] = useState('');\n  const [number, setNumber] = useState(5);\n\n  const getRandomNumber = e => {\n    // e.preventDefault()\n    setNumber(Math.floor(Math.random() * (count + 1)));\n    const newMsg = {\n      id: Date.now(),\n      word: draw_db[number].word\n    };\n\n    if (msgs.length > 0 & msgs != \" \") {\n      setMessages([...messages, newMsg]);\n      setMsgs('');\n    }\n  }; // var cardMap = Object.keys(draw_db).map((msg) =>\n  //     <ContentCard\n  //         size=\"l\"\n  //         header={\"попробуй объединить этот список в один рисунок:\"}\n  //         // subtitle={books_db[number].from}\n  //         // maxHeight={200}\n  //         text={\n  //             <div>\n  //                 <Text weight='semibold'>{draw_db[number].word}</Text>\n  //                 {/* <Text weight='semibold'>{draw_db[number].word}</Text>\n  //                 {getRandomNumber()}\n  //                 <Text weight='semibold'>{draw_db[number].word}</Text> */}\n  //             </div>\n  //         }\n  //     >\n  //     </ContentCard>\n  // )\n\n\n  var cardMap = Object.keys(words).map(msg => /*#__PURE__*/_jsxDEV(ContentCard, {\n    size: \"l\",\n    header: \"попробуй объединить этот список в один рисунок:\" // subtitle={books_db[number].from}\n    // maxHeight={200}\n    ,\n    text: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        weight: \"semibold\",\n        children: words[msg].word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    id: props.id,\n    children: [/*#__PURE__*/_jsxDEV(Spacing, {\n      size: 120\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FixedLayout, {\n      filled: true,\n      vertical: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        left: /*#__PURE__*/_jsxDEV(PanelHeaderBack, {\n          onClick: props.go,\n          \"data-to\": \"home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }, this),\n        children: \"\\u0447\\u0451 \\u043F\\u043E\\u0440\\u0438\\u0441\\u043E\\u0432\\u0430\\u0442\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: getRandomNumber,\n        stretched: true,\n        size: \"l\",\n        children: \"\\u0441\\u043A\\u0430\\u0436\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      children: cardMap[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Draw, \"JeK4cYDrKhyqgJ6aQ0TkRBvWsi4=\");\n\n_c = Draw;\nDraw.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n};\nexport default Draw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"sources":["D:/CodingProjects/vk-mini-app-che/src/panels/Draw.js"],"names":["React","useState","PropTypes","View","Input","Panel","PanelHeader","PanelHeaderBack","Button","FixedLayout","Text","ContentCard","Avatar","Spacing","draw_db","Draw","props","count","words","setWords","number","setNumber","getRandomNumber","e","Math","floor","random","newMsg","id","Date","now","word","msgs","length","setMessages","messages","setMsgs","cardMap","Object","keys","map","msg","go","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { View, Input, Panel, PanelHeader, PanelHeaderBack, Button, FixedLayout, Text, ContentCard, Avatar, Spacing } from '@vkontakte/vkui';\r\n\r\nimport draw_db from './dbs/draw.json'\r\n\r\nfunction Draw(props) {\r\n\r\n    const count = 26\r\n\r\n    const [words, setWords] = useState('')\r\n\r\n    const [number, setNumber] = useState(5)\r\n\r\n    const getRandomNumber = (e) => {\r\n        // e.preventDefault()\r\n        setNumber(Math.floor(Math.random() * (count + 1)))\r\n        \r\n        const newMsg = {\r\n            id: Date.now(),\r\n            word: draw_db[number].word\r\n        }\r\n        if (msgs.length > 0 & msgs != \" \") {\r\n            setMessages([...messages, newMsg])\r\n            setMsgs('')\r\n        }\r\n    }\r\n\r\n    // var cardMap = Object.keys(draw_db).map((msg) =>\r\n    //     <ContentCard\r\n    //         size=\"l\"\r\n    //         header={\"попробуй объединить этот список в один рисунок:\"}\r\n    //         // subtitle={books_db[number].from}\r\n    //         // maxHeight={200}\r\n    //         text={\r\n    //             <div>\r\n    //                 <Text weight='semibold'>{draw_db[number].word}</Text>\r\n    //                 {/* <Text weight='semibold'>{draw_db[number].word}</Text>\r\n    //                 {getRandomNumber()}\r\n    //                 <Text weight='semibold'>{draw_db[number].word}</Text> */}\r\n    //             </div>\r\n    //         }\r\n    //     >\r\n    //     </ContentCard>\r\n    // )\r\n\r\n    var cardMap = Object.keys(words).map((msg) =>\r\n        <ContentCard\r\n            size=\"l\"\r\n            header={\"попробуй объединить этот список в один рисунок:\"}\r\n            // subtitle={books_db[number].from}\r\n            // maxHeight={200}\r\n            text={\r\n                <div>\r\n                    <Text weight='semibold'>{words[msg].word}</Text>\r\n                    {/* <Text weight='semibold'>{draw_db[number].word}</Text>\r\n                    {getRandomNumber()}\r\n                    <Text weight='semibold'>{draw_db[number].word}</Text> */}\r\n                </div>\r\n            }\r\n        >\r\n        </ContentCard>\r\n    )\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <Spacing size={120}></Spacing>\r\n            <FixedLayout filled vertical='top'>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\r\n                >чё порисовать?\r\n                </PanelHeader>\r\n                <Spacing></Spacing>\r\n                <Button type=\"submit\" onClick={getRandomNumber} stretched size=\"l\">скажи</Button>\r\n                <Spacing></Spacing>\r\n\r\n                {/* <Input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    max={20}\r\n                    value={countTimes}\r\n                    onChange={({ target: { value } }) => setCountTimes(Number(value))}\r\n                /> */}\r\n                <Spacing></Spacing>\r\n            </FixedLayout>\r\n            <Spacing size={50}></Spacing>\r\n            <Panel>\r\n                {cardMap[0]}\r\n            </Panel>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nDraw.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Draw;\r\n"]},"metadata":{},"sourceType":"module"}